<html lang="en" class="bg-gray-200">
<head>
    <%- include('../partials/head.ejs') %>
    <title>Blockchain Queue</title>
</head>
<body class="">
    <%- include('../partials/drawer.ejs') %>

    <main>
        <div id="content" class="!p-0 min-h-screen bg-gray-200">

            <h1 class="text-2xl text-center py-7">Blockchain Queue</h1>

            <div id="eth-address" class="hidden"><%= user.eth_address %></div>

            <div id="event-card-wrapper">
                <% queue.forEach(q => { %>
                    <div class="event-card">
                        <div class="flex justify-between items-center">
                            <div>
                                <p class="queue-id hidden"><%= q.id %></p>
                                <p>Type: <span><%= q.type %></span></p>
                                <p>Land ID: <span><%= q.landId %></span></p>
                                <p>Status: <span class="queue-status <%= q.status == 'Pending' ? 'yellow' : 'red' %>"><%= q.status %></span></p>
                                <p>Time executed: <span class="timestamp"><%= q.timestamp %></span></p>
                            </div>

                            <div class="queue-pending h-16 w-16 bg-yellow-300 rounded-lg flex items-center justify-center <%= q.status == 'Pending' ? '' : 'hidden' %>">
                                <ion-icon class="text-yellow-800 text-2xl" name="hourglass-outline"></ion-icon>
                            </div>

                            <div class="queue-failed h-16 w-16 bg-red-300 rounded-lg flex items-center justify-center <%= q.status == 'Pending' ? 'hidden' : '' %>">
                                <ion-icon class="text-red-800 text-2xl" name="close-circle-outline"></ion-icon>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <% if(queue.length == 0){ %>
                <%- include('../partials/no-data.ejs') %>
            <% } %>

            <% if(areFails){ %>
                <div class="mt-3 text-center">
                    <a id="clear-queue-btn" href="/queue/clear" class="inline-block btn btn-secondary">Clear Failed Transactions</a>
                </div>
            <% } %>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

    <script src="./js/functions.js"></script>
    <script src="./js/drawer.js"></script>

    <script>
        // const socket = new WebSocket('ws://localhost:3000');

        // socket.addEventListener('open', (event) => {
        //     console.log('Connected to WebSocket server');
        //     socket.send(document.querySelector('#eth-address').textContent);
        // });

        // socket.addEventListener('message', (event) => {
        //     console.log('Message from server:', event.data);
        // });

        Array.from(document.querySelectorAll('.event-card')).forEach(async (card) => {
            let timestampSpan = card.querySelector('.timestamp');
            let timestamp = timestampSpan.textContent; 

            let date = new Date(timestamp * 1000);

            timestampSpan.textContent = formatDate(date);

            // await fetchAndPopulateLandDetails(card);
        });

        function getQueueDbRow (id, queue) {
            for(let i=0;i<queue.length;i++){
                if(queue[i].id == id){
                    return queue[i];
                }
            }

            return false;
        }

        setInterval(() => {
            $.ajax({
                type: 'post',
                url: '/apis/check-queue-status',
                data: {eth_address: document.querySelector('#eth-address').textContent},
                error: (xhr, status, error) => {
                    console.log(xhr.statusText);
                },
                success: function(res){
                    // console.log(res);
                    Array.from(document.querySelectorAll('.event-card')).forEach(async (card) => {
                        let queueEquivalent = getQueueDbRow(card.querySelector('.queue-id').textContent, res);

                        if(queueEquivalent){
                            if(queueEquivalent.status == "Failed"){
                                card.querySelector('.queue-status').textContent = 'Falied';
                                card.querySelector('.queue-status').classList.remove('yellow');
                                card.querySelector('.queue-status').classList.add('red');

                                card.querySelector('.queue-pending').classList.add('hidden');
                                card.querySelector('.queue-failed').classList.remove('hidden');
                            }
                        }

                        else{
                            card.style.display = 'none';
                        }
                    });
                }
            });
        }, 4000);

    </script>

</body>
</html>